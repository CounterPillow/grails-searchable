<project name="searchable" default="all">

  <property environment="ENV" />

  <property name="grails.home" value="${ENV.GRAILS_HOME}" />

  <condition property="grails" value="${grails.home}/bin/grails.bat">
    <os family="windows"/>
  </condition>
  <property name="grails" value="grails" />

  <property file="project.properties" />

  <property name="java.src" value="src/java" />
  <property name="groovy.src" value="src/groovy" />
  <property name="target" value="target" />
  <property name="classes" value="${target}/classes"/>
  <property name="test.java.src" value="src/test/java" />
  <property name="test.groovy.src" value="src/test/groovy" />
  <property name="test.classes" value="${target}/test-classes"/>
  <property name="test.reports" value="${target}/test-reports"/>
  <property name="lib" value="lib"/>

  <path id="groovy.classpath">
    <fileset dir="${grails.home}/lib">
      <include name="groovy-all-*.jar" />
      <include name="commons-cli-*.jar" />
      <include name="junit*.jar" />
      <include name="ant*.jar" />
    </fileset>
  </path>
  <path id="classpath">
    <fileset dir="lib" includes="*.jar" />
    <fileset dir="${grails.home}/lib" includes="*.jar">
      <exclude name="ant.jar" />
      <exclude name="ant-*.jar" />
    </fileset>
    <fileset dir="${grails.home}/dist" includes="*.jar" />
    <path location="${classes}" />
  </path>
<!--
  <path id="junit.classpath">
    <path refid="classpath" />
    <pathelement location="${grails.home}/lib/ant-junit.jar" />
    <fileset dir="${grails.home}/lib" includes="junit*.jar" />
  </path>
-->
  <path id="test.classpath">
    <path refid="classpath" />
    <pathelement location="${test.groovy.src}"/>
    <pathelement location="${test.classes}"/>
  </path>

  <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpathref="classpath" />
<!--  <taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" classpathref="junit.classpath" /> -->

  <target name="clean">
    <delete dir="${target}" />
  </target>

  <target name="compile">
    <mkdir dir="${classes}" />
    <javac srcdir="${java.src}" destdir="${classes}" source="1.4" target="1.4" debug="true" classpathref="classpath" />
    <groovyc srcdir="${groovy.src}" destdir="${classes}" classpathref="classpath" />
  </target>

  <target name="compile-test">
    <mkdir dir="${test.classes}" />
    <javac srcdir="${test.java.src}" destdir="${test.classes}" source="1.5" target="1.5" debug="true" classpathref="classpath" />
  </target>

  <target name="test" depends="compile,compile-test">
    <mkdir dir="${test.reports}" />
    <junit fork="yes" showoutput="true" failureproperty="tests.failed" printsummary="yes">
      <formatter type="brief"/>
      <classpath refid="test.classpath" />
      <jvmarg value="-Dgroovy.test.dir=${test.groovy.src}" />
      <jvmarg value="-Dgroovy.test.pattern=**/*Tests.groovy" />
      <jvmarg line="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005" />
      <test name="grails.plugins.searchable.util.AllTestSuite" todir="${test.reports}" />
    </junit>
    <loadfile srcfile="${test.reports}/TEST-grails.plugins.searchable.util.AllTestSuite.txt" failonerror="yes" property="test.output" />
    <fail if="tests.failed">
      Tests failed

      ${test.output}
    </fail>
  </target>

  <target name="single-test" depends="compile,compile-test">
    <java classname="groovy.ui.GroovyMain" fork="true" classpathref="test.classpath" failonerror="true">
      <jvmarg line="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"/>
      <arg value="${test}" />
    </java>
  </target>

  <macrodef name="grails">
    <attribute name="using.java.home" default="${java14.home}"/>
    <attribute name="dir" default="${basedir}"/>
    <attribute name="arg1"/>
    <attribute name="arg2" default=""/>
    <attribute name="arg3" default=""/>
    <sequential>
      <available file="@{using.java.home}" property="using.java.home.available"/>
      <fail unless="using.java.home.available">

      Not a valid JAVA_HOME: @{using.java.home}
      </fail>
      <echo>*** Running grails @{arg1} @{arg2} @{arg3} ***</echo>
      <property name="path" value="@{using.java.home}/bin${path.separator}${ENV.PATH}" />
      <exec executable="${grails}" dir="@{dir}" failonerror="yes">
        <env key="JAVA_HOME" value="@{using.java.home}" />
        <env key="PATH" value="${path}" />

        <arg value="@{arg1}"/>
        <arg value="@{arg2}"/>
        <arg value="@{arg3}"/>
      </exec>
    </sequential>
  </macrodef>

  <macrodef name="run-integration-test">
    <attribute name="version" default="${version}"/>
    <attribute name="app.name" />
    <attribute name="app.dir"/>
    <attribute name="app.tests" />
    <attribute name="using.java.home" />
    <sequential>
      <property name="plugin.dist" value="${basedir}/grails-searchable-@{version}.zip" />
      <property name="app.source" value="${basedir}/integration-test/grails-apps" />
      <available file="${plugin.dist}" property="plugin.dist.available" />
      <fail unless="plugin.dist.available">
        
      No such file: ${plugin.dist}
      </fail>
      <echo>
        ========================================================

        Running integration test for @{app.name}

        dir: @{app.dir}
        Java: @{using.java.home}

        ========================================================
      </echo>

      <!-- clean previous -->
      <delete dir="@{app.dir}"/>
      <mkdir dir="@{app.dir}"/>

      <!-- create vanilla app -->
      <grails dir="${tmpdir}" arg1="create-app" arg2="@{app.name}" using.java.home="@{using.java.home}"/>

      <!--
        delete any previous compilation output in grails' cache
        this is avoids class version problems when switching between Java 1.5 and 1.4

        the app.grails.version version comes from the generated app's application.properties file
      -->
      <property file="@{app.dir}/application.properties" />
      <delete dir="${user.home}/.grails/${app.grails.version}/scriptCache"/>
      <delete dir="${user.home}/.grails/${app.grails.version}/projects/@{app.name}"/>

      <!--Copy app files-->
      <copy todir="@{app.dir}" overwrite="true">
        <fileset dir="${app.source}/@{app.name}"/>
      </copy>
      <copy todir="@{app.dir}" overwrite="true">
        <fileset dir="${app.source}/@{app.tests}"/>
      </copy>

      <!--Install Searchable Plugin -->
      <grails dir="@{app.dir}" arg1="install-plugin" arg2="${plugin.dist}" using.java.home="@{using.java.home}"/>

      <!-- Install web test plugin -->
      <!--<grails dir="@{app.dir}" arg1="install-plugin" arg2="webtest" using.java.home="@{using.java.home}"/>-->

      <!-- Clean -->
      <grails dir="@{app.dir}" arg1="clean" using.java.home="@{using.java.home}"/>

      <!-- Test app -->
      <grails dir="@{app.dir}" arg1="test-app" using.java.home="@{using.java.home}"/>

      <!-- Web test -->
      <!--<grails dir="@{app.dir}" arg1="run-webtest" using.java.home="@{using.java.home}"/>-->
    </sequential>
  </macrodef>

  <target name="integration-test" depends="package">
    <fail unless="version">

    Please specify a version, eg
        
        ant integration-test -Dversion=0.4-SNAPSHOT
    </fail>

    <property name="tmpdir" value="${basedir}/../tmp"/>
    <delete dir="${tmpdir}"/>
    <mkdir dir="${tmpdir}"/>

    <run-integration-test using.java.home="${java14.home}" app.name="simple-groovy" app.tests="artist-and-album-tests" app.dir="${tmpdir}/simple-groovy"/>
    <run-integration-test using.java.home="${java15.home}" app.name="simple-groovy" app.tests="artist-and-album-tests" app.dir="${tmpdir}/simple-groovy"/>

    <run-integration-test using.java.home="${java14.home}" app.name="compass-mapping-xml-groovy" app.tests="artist-and-album-tests" app.dir="${tmpdir}/compass-mapping-xml-groovy"/>
    <run-integration-test using.java.home="${java15.home}" app.name="compass-mapping-xml-groovy" app.tests="artist-and-album-tests" app.dir="${tmpdir}/compass-mapping-xml-groovy"/>

    <!-- this app uses annotations so is only Java 1.5 compatible -->
    <run-integration-test using.java.home="${java15.home}" app.name="compass-annotated-groovy" app.tests="artist-and-album-tests" app.dir="${tmpdir}/compass-annotated-groovy"/>
  </target>

  <target name="package" unless="nopackage">
    <grails arg1="package-plugin" />
  </target>

  <target name="all" depends="clean, compile, compile-test, test, package, integration-test" />

</project>
